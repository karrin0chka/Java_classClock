package org.example;

/*
Практика 1. Классы Java в сравнении с C++.
Реализуйте класс часы. В часах есть две стрелки – часовая и минутная, а также храниться название марки и цена часов. Класс часы должен позволять получать
стоимость часов, название марки часов, устанавливать начальное время, а также переводить время вперед.
*/
/*
//////////////////
Практика 2. Наследование в Java в сравнении с C++. Обработка ошибок (исключения).
Реализуйте систему классов для описания часов. Предполагается, что каждые часы содержат информацию о стоимости и названии марки часов. При реализации
необходимо описать два типа часов. В первом типе часов две стрелки – часовая и минутная, а во втором типе часов добавляется секундная стрелка. Классы
часы должен позволять получать стоимость, название марки часов, устанавливать начальное время, а также переводить время вперед. При переводе времени
необходимо контролировать корректность введенных данных. При некорректном задании времени должна возникать исключительная ситуация.
*/
/*
//////////////
Практика 3. Введение в коллекции данных в Java.
Запросы по возможности должны использовать реализованные в коллекциях алгоритмы.
Необходимо реализовать систему классов описания магазина часов. Количество часов в магазине не ограничено. Предполагается, что каждые часы содержат
информацию о стоимости и названии марки часов. При реализации необходимо описать два типа часов. В первом типе часов две стрелки – часовая и минутная,
а во втором типе часов добавляется секундная стрелка. Классы часы должен позволять получать стоимость, название марки часов, устанавливать начальное время,
а также переводить время вперед. При переводе времени необходимо контролировать корректность введенных данных. При некорректном задании времени должна
возникать исключительная ситуация.

Магазин должен позволять:
Получать описания самых дорогих часов. -> getClockMax
Устанавливать заданное время на всех часах. -> SetAllTime
Получать название наиболее часто встречающейся марки часов в магазине. -> MaxCounter
Выводить марки часов без повторения в упорядоченном виде. -> AllStamps (seporateClocks)
*/
/*
////////
Практика 4.
Основное задание на практику - подготовить визуальное приложение отвечающее на запросы из предыдущей л.р.

Практика 5.
добавить два способа сохранения и восстановления данных
    1. Используя встроенные механизмы сериализации данных
    2. Используя формат JSON
 */

public class Main {
    public static void main(String[] args) {
        new MyFrame();
    }
}